// <auto-generated />
using System;
using AutoParts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoParts.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoParts.Models.AutoPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("Amount")
                        .HasColumnType("smallint")
                        .HasAnnotation("Relational:JsonPropertyName", "amount");

                    b.Property<string>("Applicability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "applicability");

                    b.Property<string>("Company")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Unknown")
                        .HasAnnotation("Relational:JsonPropertyName", "company");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<decimal>("PriceInRubles")
                        .HasColumnType("decimal(10, 2)")
                        .HasAnnotation("Relational:JsonPropertyName", "priceInRubles");

                    b.Property<decimal>("PriceInTenge")
                        .HasColumnType("decimal(10, 2)")
                        .HasAnnotation("Relational:JsonPropertyName", "priceInTenge");

                    b.HasKey("Id");

                    b.ToTable("AutoParts");
                });

            modelBuilder.Entity("AutoParts.Models.AutoPartOrder", b =>
                {
                    b.Property<int>("AutoPartsId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.HasKey("AutoPartsId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("AutoPartOrders", (string)null);
                });

            modelBuilder.Entity("AutoParts.Models.AutoPartSoldAmount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutoPartId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("SoldAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutoPartId");

                    b.HasIndex("OrderId");

                    b.ToTable("AutoPartSoldAmount");
                });

            modelBuilder.Entity("AutoParts.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AutoParts.Models.AutoPartOrder", b =>
                {
                    b.HasOne("AutoParts.Models.AutoPart", "AutoPart")
                        .WithMany("AutoPartOrders")
                        .HasForeignKey("AutoPartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoParts.Models.Order", "Order")
                        .WithMany("AutoPartOrders")
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AutoPart");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AutoParts.Models.AutoPartSoldAmount", b =>
                {
                    b.HasOne("AutoParts.Models.AutoPart", "AutoPart")
                        .WithMany()
                        .HasForeignKey("AutoPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoParts.Models.Order", null)
                        .WithMany("AutoPartSoldAmount")
                        .HasForeignKey("OrderId");

                    b.Navigation("AutoPart");
                });

            modelBuilder.Entity("AutoParts.Models.AutoPart", b =>
                {
                    b.Navigation("AutoPartOrders");
                });

            modelBuilder.Entity("AutoParts.Models.Order", b =>
                {
                    b.Navigation("AutoPartOrders");

                    b.Navigation("AutoPartSoldAmount");
                });
#pragma warning restore 612, 618
        }
    }
}
